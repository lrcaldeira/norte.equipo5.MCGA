@{
    ViewBag.Title = "Nueva Producto";
}

<div class="container-fluid">

    <div class="card shadow mb-4">
        <h2 class="title"><a href="#"> Nuevo Producto</a></h2>

        <div class="card-body">
            <div class="row form-group">
                <div class="col-md-12">
                    <label>Título</label>
                    <input class="form-control" data-bind="value: Title" />
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-6">
                    <label>Descripción</label>
                    <input class="form-control" data-bind="value: Description" size="50" />
                </div>
                <div class="col-md-6">
                    <label>Image</label>
                    <input class="form-control" data-bind="textInput: Image" />
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-6">
                    <label>Precio</label>
                    <input class="form-control" type="number" min="0" data-bind="textInput: Price" />
                </div>
                <div class="col-md-6">
                    <label>Artista</label>
                    <select class="form-control" data-bind="options: Artists, optionsText:'FirstName', optionsValue: 'Id', value:art "></select>
                </div>
            </div>
            <div class="text-center m-t-30">
                <input type="button" value="Confirmar" data-bind="click: AddProduct" class="btn btn-primary" />
                <input type="button" value="Regresar" class="btn btn-secondary btn-icon-split" onclick="window.location='/Product/Index';" />
            </div>



        </div>
    </div>
</div>



@section Scripts {
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>

    <script>
        var appViewModel = function () {
            var self = this;
            self.Title = ko.observable('');
            self.Description = ko.observable('');
            self.Image = ko.observable('');
            self.Price = ko.observable('');
            self.art= ko.observable('');
            self.Artists = ko.observableArray([]);
            self.AddProduct = function () {
                $.ajax({
                    url: '@Url.Action("AddProduct", "Product")',
                    type: 'post',
                    data: ko.mapping.toJSON(this),
                    contentType: 'application/json',
                    success: function (result) {
                        window.location = "/Product";
                    }
                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
            };
            function Artista(data) {
                this.Id = ko.observable(data.Id);
                this.FirstName = ko.observable(data.FirstName);
                this.LastName = ko.observable(data.LastName);
            }
            $.getJSON("/Artist/GetArtists",
                function (data) {
                    var Artistas = ko.utils.arrayMap(data, function (item) {
                        return new Artista(item);
                    });
                    self.Artists(Artistas);
                });
        }
        var viewModel = new appViewModel();
        ko.applyBindings(viewModel);
    </script>
}